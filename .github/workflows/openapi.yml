name: OpenAPI specification

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: Install jq
        uses: dcarbone/install-jq-action@v3.2.0

      - name: Retrieve OpenAPI specs
        shell: bash
        run: task openapi:specs

      - name: Commit changes
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: 'data/*.json'
          commit_message: Update OpenAPI reference

      - name: Create release
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: |
          tag=$(date +%Y.%m.%d)-$GITHUB_RUN_ID
          triggered_by="ü§ñ"
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            triggered_by="‚úçÔ∏è"
          fi

          gh release create "$tag" --title="$tag $triggered_by" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload pages artifact
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./data

      - name: Deploy to GitHub Pages
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        id: deployment
        uses: actions/deploy-pages@v4